pro CTIO_spec,prefix,spfname,outfname,redpar, orc, xwid=xwid, flat=flat, nosky=nosky, cosmics=cosmics
;Reads in image,  divides by FLAT FIELD.
;  Extracts spectrum and background from each order, subtracts background,
;
;INPUT:
;    PREFIX (input string)   prefix of all file names (i.e., 'qa11.' for qa11.nnnn.fits)
;        to all observations made with a particular spectrograph setting. 
;        The following files are expected to exist:
;	 * prefix.sum - Summed flat field (from addwf.pro)
;	 * prefix.ord - default order location coefficients (from ctio_dord)
;    SPFNAME  (input string) filename of given observation.
;    OUTFNAME (input string) complete path and filename of wdsk-d output.
;    REDPAR   global parameter structure
;    ORC order location coefficients
;    NOSKY (flag) Throw flag to supress sky subtraction.  Use for ThAr
;        images or to speed things up if sky subtraction (which is
;        actually a scattered light subtraction) should not be
;        performed.  Do not combine this flag with cosmics, which
;        requires a good bg subtraction
;    COSMICS (flag) Throw this flag to initiate cosmic ray removal.
;    
;
;OUTPUT
;   The following file may be created by ctio_spec:
;	  * spfname.ord - order location coefficients, if they were determined
;         OUTFNAME is the path and filename of the output, reduced spectrum.
;         OUTFNAME.opt -- optimally extracted spectrum from the cosmic
;                         ray removal algorithm.
;
; 12-Oct-201 AT added parameter file as argument, removed common  

DEBUG=0

if n_params() lt 5 then begin
  print,'syntax: ctio_spec,prefix,spfname,outfname,redpar,orc[,thar[,nosky]]'
  retall
endif

	print,''
	print,'CTIO_SPEC: Entering routine.'
; cancel previous erros 
	CATCH, /CANCEL

	print,'spfname=',spfname

; Read the image file
   im = getimage(spfname, redpar, header=head)  
   if (size(im))[0] lt 2 then begin
     print, 'Image is not found. Returning from CTIO_SPEC.'
     retall
   endif
   im = rotate(im, 1) ; change orientation: orders along lines          

   sz = size(im)		
   ncol = sz[1]				;# columns in image
   nrow = sz[2]				;# rows in image

;ORDER LOCATIONS finding: Use saved locations
;	rdsk,orc,prefix + '.ord'			;restore  order locs

    if ~keyword_set(xwid) then begin
       print, 'CTIO_SPEC: extraction width is undefined! Try to find optimum width from the spectrum'
	xwid = getxwd(im, orc)
       print, 'New extraction width: ',xwid
    endif



; Scattered light subtraction	
	IF not keyword_set(nosky) then begin                
		getsky,im,orc,sky = sky              	;determine and subtract sky
	ENDIF ELSE BEGIN
		sky=im*0.
        ENDELSE

; Find vertical offset of orders (optional, not used)
;   ordshift, im, orc, 20, xwid



;EXTRACT SPECTRUM
    if not keyword_set(thar) then begin
		getspec, im, orc, xwid, spec, sky=sky, $
				 cosmics=cosmics, optspec=optspec, diff=replace, gain=redpar.gain, ron=redpar.ron
    endif else begin
    	getspec,im,orc,xwid,spec, gain=redpar.gain, ron=redpar.ron ; ThAR - no cosmic removal
    endelse
  
; flat-field correction
     if keyword_set(flat) then spec = spec/flat else print, 'CTIO_SPEC: WARNING: no flat-field correction!'
 
;    tvscl, spec   
;    plot, spec[*,10]
;   stop, 'CTIO_SPEC: spectrum plot' 

	;
	;STORE REDUCED SPECTRUM
	if not keyword_set(thar) then begin 
         	intcon, spec, intspec             ;convert image to I*2
	endif else begin
		intspec=float(spec)   ;bail out on integerizing thars
	endelse
	
	print,'CTIO_SPEC: Saving extracted spectrum to ' + outfname
    
    ; rotate the spectrum to read from blue to red 
    if strt(sxpar(head, 'DHEINF')) eq 'MNSN torrent hardware' then intspec=rotate(intspec,5) $
    else intspec=rotate(intspec,7) 
    wdsk,intspec,outfname,1,/new			;write image to disk
    wdsk,head,outfname,2

; DEBUG
;   plot, intspec[*,0]
;   tvscl, congrid(intspec,n_elements(intspec[*,0], 8*n_elements(intspec[0,*]))
;   stop, 'CTIO-SPEC DEBUG: spectrum plot'
		
	return
end

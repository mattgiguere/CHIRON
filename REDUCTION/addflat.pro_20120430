pro addflat, flatfiles, sum, redpar, im_arr
; median-co-adds flat-field files, result in SUM
compile_opt idl2

numwf=n_elements(flatfiles) & owidefiles = flatfiles
print, "Entering ADDFLAT routine Nflats= ",numwf

sum = 0
im = getimage(flatfiles[0], redpar, header=header) ; read the first image
if (size(im))[0] lt 2 then return ; file not found

geom = chip_geometry(flatfiles[0], hdr=header) ; returns CCD geometry in a structure 

sz = size(im)
nc=sz[1]  &  nr=sz[2]
im_arr=fltarr(nc,nr,numwf)
im_arr[*,*,0]=[im]
imnsz = size(im)
totwf = dblarr(nc,nr)
swidth = 50L

ctwf=1   ; count the number of wideflats with acceptable counts (already have [0])
for j = 1, numwf-1 do begin
  im = getimage(flatfiles[j], redpar, header=header, geom=geom) ; read  image, correct for bias and non-linearity        
  if redpar.flatnorm eq 1 then begin
	 imswath = im[(sz[2]/2d - swidth):(sz[2]/2d + swidth),*]
	 imswmed = median(imswath, dimen=1, /double)
	 normval = max(imswmed)
         if normval ge redpar.minflatval then ctwf = ctwf+1
print,normval, redpar.minflatval
  endif 
  if redpar.flatnorm eq 0 then normval =1d
 ; redpar.flatnorm le 1 then im_arr[*,*,j] = im/normval  ;;im_arr[*,*,0] is not normalized
  if redpar.flatnorm le 1 then im_arr[*,*,j] = im
  if redpar.flatnorm eq 2 then totwf += im
endfor

if ctwf lt numwf then begin
   stop, 'ctwf ne numwf'
   new_imarr=fltarr(nc, nr, ctwf)
   for jj=0,ctwf-1 do new_imarr=im_arr[*,*,jj]
   im_arr=new_imarr
   numwf=ctwf
endif


print, 'ADDFLAT: calculating median flat...'
sum = dblarr(nc,nr)
for ncol=0,nc-1 do begin
  for nrow=0,nr-1 do begin
     pixarr=reform(im_arr[ncol, nrow, *])
     msum=mean(pixarr)
     stdvsum=stddev(pixarr)
     xgd=where(pixarr lt (msum + 2.*stdvsum),ngd) 
	 sum[ncol, nrow] = total(pixarr[xgd]^2)/total(pixarr[xgd])
	 x = finite(pixarr, /nan)
	 if total(x) then stop
	 ;sum[ncol,nrow]=median(im_arr[ncol,nrow,*])  ; old way, replaced by 5 lines above
  endfor
endfor


if redpar.flatnorm eq 2 then sum=totwf

badp = where(sum le 0, nbadp)   ;find pixels le 0, and counts them
if nbadp gt 0 then     sum[badp] = 1.0           ;and fix them ?? is this a fix?

;  wdsk,totalwf,prefix+'sum',/new ; wdsk stores co-added wideflat
; print,'ADDFLAT: flat images are now summed and stored as: '+prefix+'sum'

end
